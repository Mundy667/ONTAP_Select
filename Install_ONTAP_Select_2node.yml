---
- hosts: localhost
  connection: local
  gather_facts: no

#############################################################################

#NNNNNNNNNNNNNNNN     Athor:  David Hepler
#NNNNNNNNNNNNNNNN     Info:   I made the decision to have 1 playbook 
#NNNNNN    NNNNNN     for each ONTAP Select cluster size to keep it simple. 
#NNNNNN    NNNNNN     
#NNNNNN    NNNNNN     In the longterm it would be best to make an 
#NNNNNN    NNNNNN     ansible module for the installation.

##############################################################################

############ ------------------OTS Return Codes --------- ############
# 200 	OK 	Indicates success for calls that do not create a new object.
# 201 	Created 	An object is successfully created; the location response header includes the unqiue identifer for the object.
# 202 	Accepted 	A long-running job has been started to perform the request, but the operation has not completed.
# 400 	Bad Request 	The request input is not recognized, malformed, or is otherwise not appropriate.
# 403 	Forbidden 	Access is denied due to an authorization error.
# 404 	Not Found 	The resource referred to in the request does not exist.
# 405 	Method Not Allowed 	The HTTP verb in the request is not supported for the resource.
# 409 	Conflict 	An attempt to create an object failed because the object already exists.
# 500 	Internal Error 	Indication of a general, non-specific internal error.

############ ------------------VARS --------- ############
  vars:
# ----- Deploy Specific -----
    otd_user: "admin"
    otd_password: "Netapp01!"
    deploy_rest_api_url: "https://10.65.56.19/api/v3"
# ----- Cluster Specific -----
    new_cluster_node_num: "2"
    new_cluster_name: "Select-03"
    new_cluster_gateway: "10.65.59.1"
    new_cluster_ip: "10.65.59.164"
    new_cluster_netmask: "255.255.255.0"
    ntp_servers:
      - "10.65.56.5"
    domain_names:
      - "muccbc.hq.netapp.com"
    dns_ips:
      - "10.65.56.5"
      - "10.65.56.6"
    ots_password: "Netapp01!"

# ----- Node Specific -----

# ----- vCenter Specific -----
    vcenter_server: "cbc-vc-sdot.muccbc.hq.netapp.com"
    vcenter_user: "administrator@vsphere.local"
    vcenter_password: "Netapp01!"

# ----- Host Specific -----
    hypervisor_hosts:
     - "cbc-sdot-03.muccbc.hq.netapp.com"
     - "cbc-sdot-04.muccbc.hq.netapp.com"
# --extra-vars='{"hypervisor_hosts": [1,2,3]}'

############ ------------------TASKS --------- ############

  tasks:
  - name: Check if Cluster already exists
    uri:
      url: "{{ deploy_rest_api_url }}/clusters?name={{ new_cluster_name }}"
      method: GET
      headers:
        Content-Type: "application/json"
      body_format: json
      user: "{{ otd_user }}"
      password: "{{ otd_password }}"
      status_code: 200
      validate_certs: False 
    register: check_cluster_response

  - debug: var=check_cluster_response

  - debug: var=check_cluster_response.json.num_records

#----------------------------------
  - block:
      - name: "End playbook if cluster already exists"
        debug:
          msg: "Cluster already exists, ending playbook"

      - meta: end_play
    when: check_cluster_response.json.num_records != 0
#----------------------------------
  - name: create Cluster
    uri:
      url: "{{ deploy_rest_api_url }}/clusters?node_count={{ new_cluster_node_num }}"
      method: POST
      headers:
        Content-Type: "application/json"
      body: 
        name: "{{ new_cluster_name }}"
        gateway: "{{ new_cluster_gateway }}"
        ip: "{{ new_cluster_ip }}"
        netmask: "{{ new_cluster_netmask }}"
        ntp_servers: "{{ ntp_servers }}"
        dns_info:
          dns_ips: "{{ dns_ips }}"
          domains: "{{ domain_names }}"
      body_format: json
      user: "{{ otd_user }}"
      password: "{{ otd_password }}"
      status_code: 201
      validate_certs: False 
    register: cluster_create_response

  - debug: var=cluster_create_response

  - name: Get New Cluster Info
    uri:
      url: "{{ deploy_rest_api_url }}/clusters"
      method: GET
      headers:
        Content-Type: "application/json"
      body_format: json
      user: "{{ otd_user }}"
      password: "{{ otd_password }}"
      status_code: 200
      validate_certs: False 
    register: cluster_get_response

  - debug: msg="{{ cluster_get_response.json.records }}"

  - set_fact:
      cluster_id: "{{ item.id }}"
    with_items: "{{ cluster_get_response.json.records }}"
    when:  item.name  == new_cluster_name

  - debug: var=cluster_id

#----------------------------------------------------------
# The Host Registration needs to happen here
# First I need to GET hosts and check if host to be added is already there
# when host not there, host register
# How should I do this? A with_items Loop? If so, how should I do this? 
# I need to create an array and I could add up to 8 hosts.
#----------------------------------------------------------

#----------------------------------------------------------
# The node modify (host name, name of the node, networks) needs to happen here
# First I need to GET a list of the hosts and probably create an array with that information
# Then I need to assign storage to each host 
# How should I do this? A with_items Loop? If so, how should I do this? 
# I need to create an array and I could add up to 8 hosts.
#----------------------------------------------------------

#----------------------------------------------------------
# The node storage attach needs to happen here
#
# How should I do this? A with_items Loop? If so, how should I do this? 
# I need to create an array and I could add up to 8 hosts.
#----------------------------------------------------------


  - name: Start Cluster Deployment
    uri:
      url: "{{ deploy_rest_api_url }}/clusters/{{ cluster_id }}/deploy?inhibit_rollback=false"
      method: POST
      headers:
        Content-Type: "application/json"
      body: 
        ontap_credential:
          password: "{{ ots_password }}"
      body_format: json
      user: "{{ otd_user }}"
      password: "{{ otd_password }}"
      status_code: 202
      validate_certs: False 
    register: cluster_deploy_response

##---------This section should be used-------------------------
## to wait on the cluster to be installed. If there is an error,
## return the error message, otherwise end playbook 
#  - block:
#      - name: ""
#        debug:
#          msg: ""
#
#      - meta: end_play
#    when: check_cluster_response.json.num_records != 0
##----------------------------------
